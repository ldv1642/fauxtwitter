<div id="cheatsheet">
	<h1>CheatSheet</h1>

	<table>
		<tr>
			<td>
				Task
			</td>
			<td>
				Syntax
			</td>
		</tr>
		<tr>
			<td>
				String concatenation
			</td>
			<td>
				"foo" + "bar"
			</td>
		</tr>
		<tr>
			<td>
				String interpolation
			</td>
			<td>
				name = "Daniel"
				<br>
				greeting = "My name is #{name}"
			</td>
		</tr>
		<tr>
			<td>
				Print
			</td>
			<td>
				puts "Hello, World"
			</td>
		</tr>
		<tr>
			<td>
				" vs '
			</td>
			<td>
				'Hello \t how are you \t'
				<br>
				"Hello \\t how are you \\t"
			</td>
		</tr>
		<tr>
			<td>
				Pass message to an object
			</td>
			<td>
				"dan".length 
				<br>
				=> 3
			</td>
		</tr>
		<tr>
			<td>
				Indicate a boolean return
			</td>
			<td>
				"dan".empty?
				<br>
				=> false
			</td>
		</tr>
		<tr>
			<td>
				Control flow
			</td>
			<td>
				if "dan".empty?
				<br>
				"string is empty"
				<br>
				else
				<br>
				"string is not empty"
				<br>
				end
			</td>
		</tr>
		<tr>
			<td>
				Message chaining
			</td>
			<td>
				"dan".empty?.to_s
				<br>
				=> "false"
			</td>
		</tr>
		<tr>
			<td>
				Method definition
			</td>
			<td>
				def add(a,b)
				<br>
				a+b
				<br>
				end
			</td>
		</tr>
		<tr>
			<td>
				Split string into array
			</td>
			<td>
				"hello dan".split
				<br>
				=> ["hello","dan"]
			</td>
		</tr>
		<tr>
			<td>
				Mutate array
			</td>
			<td>
				a = [4,3,1]
				<br>
				a.sort!
				<br>
				=> [1,3,4]
			</td>
		</tr>
		<tr>
			<td>
				Add to array
			</td>
			<td>
				a.push(6)
				<br>
				=> [1,3,4,6]
				<br>
				a << 7 << 8
				<br>
				=> [1,3,4,6,7,8]
			</td>
		</tr>
		<tr>
			<td>
				Join array
			</td>
			<td>
				a.join
				<br>
				=> "134678"
			</td>
		</tr>
		<tr>
			<td>
				Create a string array
			</td>
			<td>
				%w[a b c]
				<br>
				=> ["a","b","c"]
			</td>
		</tr>
		<tr>
			<td>
				Creating a range
			</td>
			<td>
				(0..3).to_a
				<br>
				=> [0,1,2,3]
			</td>
		</tr>
		<tr>
			<td>
				Using blocks with braces
			</td>
			<td>
				(1..3).each { |i| 
				<br>
				puts i + 1
				<br>
				}
				<br>
				2
				<br>
				3
				<br>
				4
				<br>
				=> 1..3
			</td>
		</tr>
		<tr>
			<td>
				Using blocks with do
			</td>
			<td>
				(1..3).each do |n| 
				<br>
				puts n + 1
				<br>
				end
				<br>
				2
				<br>
				3
				<br>
				4
				<br>
				=> 1..3
			</td>
		</tr>
		<tr>
			<td>
				Map
			</td>
			<td>
				(1..3).map do |n| 
				<br>
				n + 1
				<br>
				end
				<br>
				=> [2,3,4]
			</td>
		</tr>
		<tr>
			<td>
				Hashes
			</td>
			<td>
				user = {}
				<br>
				user["name"] = "Daniel"
				<br>
				user["age"] = 27
				<br>
				user["name"]
				<br>
				=> "Daniel"
				<br>
				user
				<br>
				=> {"name" => "daniel", "age"=>27}
			</td>
		</tr>
		<tr>
			<td>
				Hashrocket
			</td>
			<td>
				user = {"name" => "daniel"}
				<br>
				user["name"]
				<br>
				=> "daniel"
			</td>
		</tr>
		<tr>
			<td>
				Hash with symbols
			</td>
			<td>
				user = {:name => "daniel"}
				<br>
				user2 = {name: "jess"}
				<br>
				user[:name]
				<br>
				=> "daniel"
				<br>
				user2[:name]
				<br>
				=> "jess"
			</td>
		</tr>
		<tr>
			<td>
				Hash with blocks
			</td>
			<td>
				user = {name: "Dan", age: 27}
				<br>
				user.each do |key,value|
				<br>
				puts "Key #{key.inspect} has a value #{value.inspect}"
				<br>
				end
				<br>
				Key :name has a value "Dan"
				<br>
				Key :age has a value 27
				<br>
				
			</td>
		</tr>
	</table>
</div>